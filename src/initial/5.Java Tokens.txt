Separators

Separators help define the structure of a program. Below are the identifiers thar are used in Java.
parentheses ( ) - Encloses arguments in method definitions and calling; adjusts precedence in arithmetic expressions;
                  surrounds cast types and delimits test expressions in flow control statements
braces { } - defines blocks of code and automatically initializes arraysVarargs
period . - Selects a field or method from an object; separates package names from sub-package and class names
comma , - separates successive identifiers in variable declarations; chains statements in the test, expression of a for loop
semicolon ; - terminates statements
colon : - Used after loop labels
brackets [] - declares array types and dereferences array values

Identifiers

Identifiers are the names of variables, methods, classes, packages and interfaces.
Unlike literals they are not the things themselves, just ways of referring to them.
In the program, initial, MyClass, String, args, main and println are identifiers.
Identifiers must be composed of letters, numbers, the underscore _ and the dollar sign $.
Identifiers may only begin with a letter, the underscore or a dollar sign.
Each variable has a name by which it is identified in the program.
It's a good idea to give your variables mnemonic names that are closely related to the values they hold.
Variable names can include any alphabetic character or digit and the underscore _.
The main restriction on the names you can give your variables is that they cannot contain any white space.
You cannot begin a variable name with a number.
It is important to note that all variable names are case-sensitive. MyVariable is not the same as myVariable.
There is no limit to the length of a Java variable name.
Usually class, interface name are Camel case - MyClass
Variables and methods are camel case with first letter small - myVariable
Variables which are static and final are all capital - MYVARIABLE
The following are legal variable names:
MyVariable
myvariable
MYVARIABLE
x
i
_myvariable
$myvariable
_9pins
This_is_an_insanely_long_variable_name_that_just_keeps_going_and_going_and_going_and_well_you_get_the_idea_The_line_breaks_arent_really_part_of_the_variable_name_Its_just_that_this_variable_name_is_so_ridiculously_long_that_it_won't_fit_on_the_page_I_cant_imagine_why_you_would_need_such_a_long_variable_name_but_if_you_do_you_can_have_it

The following are not legal variable names:
My Variable // Contains a space
9pins // Begins with a digit
a+c // The plus sign is not an alphanumeric character
testing1-2-3 // The hyphen is not an alphanumeric character
O'Reilly // Apostrophe is not an alphanumeric character
OReilly_&_Associates // ampersand is not an alphanumeric character

Tip: How to Begin a Variable Name with a Number
If you want to begin a variable name with a digit, prefix the name you'd like to have (e.g. 8ball) with an underscore, e.g. _8ball.
You can also use the underscore to act like a space in long variable names.

Java Reserved Keywords

Java has a set of keywords that are reserved words that cannot be used as variables, methods, classes, or any other identifiers:
abstract	    A non-access modifier.
                Used for classes and methods: An abstract class cannot be used to create objects
                (to access it, it must be inherited from another class).
                An abstract method can only be used in an abstract class, and it does not have a body.
                The body is provided by the subclass (inherited from)
assert	        For debugging
boolean	        A data type that can only store true and false values
break	        Breaks out of a loop or a switch block
byte	        A data type that can store whole numbers from -128 and 127
case	        Marks a block of code in switch statements
catch	        Catches exceptions generated by try statements
char	        A data type that is used to store a single character
class	        Defines a class
continue	    Continues to the next iteration of a loop
const	        Defines a constant. Not in use - use final instead
default	        Specifies the default block of code in a switch statement
do	            Used together with while to create a do-while loop
double	        A data type that can store whole numbers from 1.7e−308 to 1.7e+308
else	        Used in conditional statements
enum	        Declares an enumerated (unchangeable) type
exports	        Exports a package with a module. New in Java 9
extends	        Extends a class (indicates that a class is inherited from another class)
final	        A non-access modifier used for classes, attributes and methods,
                which makes them non-changeable (impossible to inherit or override)
finally	        Used with exceptions, a block of code that will be executed no matter if there is an exception or not
float	        A data type that can store whole numbers from 3.4e−038 to 3.4e+038
for	            Create a for loop
goto	        Not in use, and has no function
if	            Makes a conditional statement
implements	    Implements an interface
import	        Used to import a package, class or interface
instanceof	    Checks whether an object is an instance of a specific class or an interface
int	            A data type that can store whole numbers from -2147483648 to 2147483647
interface	    Used to declare a special type of class that only contains abstract methods
long	        A data type that can store whole numbers from -9223372036854775808 to 9223372036854775808
module	        Declares a module. New in Java 9
native	        Specifies that a method is not implemented in the same Java source file (but in another language)
new	            Creates new objects
package	        Declares a package
private	        An access modifier used for attributes, methods and constructors, making them only accessible within
                the declared class
protected	    An access modifier used for attributes, methods and constructors, making them accessible in the same
                package and subclasses
public	        An access modifier used for classes, attributes, methods and constructors, making them accessible
                by any other class
requires	    Specifies required libraries inside a module. New in Java 9
return	        Finished the execution of a method, and can be used to return a value from a method
short	        A data type that can store whole numbers from -32768 to 32767
static	        A non-access modifier used for methods and attributes. Static methods/attributes can be accessed without
                creating an object of a class
strictfp	    Restrict the precision and rounding of floating point calculations
super	        Refers to superclass (parent) objects
switch	        Selects one of many code blocks to be executed
synchronized	A non-access modifier, which specifies that methods can only be accessed by one thread at a time
this	        Refers to the current object in a method or constructor
throw	        Creates a custom error
throws	        Indicates what exceptions may be thrown by a method
transient	    A non-accesss modifier, which specifies that an attribute is not part of an object's persistent state
try	            Creates a try...catch statement
var	            Declares a variable. New in Java 10
void	        Specifies that a method should not have a return value
volatile	    Indicates that an attribute is not cached thread-locally, and is always read from the "main memory"
while	        Creates a while loop

Note: true, false, and null are not keywords, but they are literals and reserved words that cannot be used as identifiers.