When you assign value of one data type to another, the two types might not be compatible with each other.
If the data types are compatible, then Java will perform the conversion automatically known as Automatic Type Conversion
and if not then they need to be casted or converted explicitly.
For example, assigning an int value to a long variable.

Widening or Automatic Type Conversion

Widening conversion takes place when two data types are automatically converted.
This happens when:
The two data types are compatible.
When we assign value of a smaller data type to a bigger data type.
For Example, in java the numeric data types are compatible with each other
but no automatic conversion is supported from numeric type to char or boolean.
Also, char and boolean are not compatible with each other.

byte -> short -> int -> long -> float -> double

Narrowing or Explicit Conversion

If we want to assign a value of larger data type to a smaller data type we perform explicit type casting or narrowing.
This is useful for incompatible data types where automatic conversion cannot be done.
Here, target-type specifies the desired type to convert the specified value to.

double -> float -> long -> int -> short -> byte
While assigning value to byte type the fractional part is lost and is reduced to modulo 256(range of byte).

Type promotion in Expressions

While evaluating expressions, the intermediate value may exceed the range of operands and hence the expression value will be promoted.
Some conditions for type promotion are:
Java automatically promotes each byte, short, or char operand to int when evaluating an expression.
If one operand is a long, float or double the whole expression is promoted to long, float or double respectively.

Explicit type casting in Expressions

While evaluating expressions, the result is automatically updated to larger data type of the operand.
But if we store that result in any smaller data type it generates compile time error, due to which we need to type cast the result.
NOTE- In case of single operands the result gets converted to int and then it is type casted accordingly, as in the above example.