In Java, a constructor is a block of codes similar to the method.
It is called when an instance of the class is created.
At the time of calling constructor, memory for the object is allocated in the memory.
It is a special type of method which is used to initialize the object.
Every time an object is created using the new() keyword, at least one constructor is called.
It calls a default constructor if there is no constructor available in the class.
In such case, Java compiler provides a default constructor by default.

Note: It is called constructor because it constructs the values at the time of object creation.
It is not necessary to write a constructor for a class.
It is because java compiler creates a default constructor if your class doesn't have any.

Rules for creating Java constructor

Constructor name must be the same as its class name
A Constructor must have no explicit return type
A Java constructor cannot be abstract, static, final, and synchronized

Note: We can use access modifiers while declaring a constructor.
It controls the object creation. In other words, we can have private, protected, public or default constructor in Java.

Types of Java constructors

Default constructor (no-arg constructor)
Parameterized constructor

Java Default Constructor
A constructor is called "Default Constructor" when it doesn't have any parameter.

Rule: If there is no constructor in a class, compiler automatically creates a default constructor.

Q) What is the purpose of a default constructor?
The default constructor is used to provide the default values to the object like 0, null, etc., depending on the type.

Java Parameterized Constructor
A constructor which has a specific number of parameters is called a parameterized constructor.

Why use the parameterized constructor?
The parameterized constructor is used to provide different values to distinct objects. However, you can provide the same values also.

Constructor Overloading in Java
In Java, a constructor is just like a method but without return type. It can also be overloaded like Java methods.
Constructor overloading in Java is a technique of having more than one constructor with different parameter lists.
They are arranged in a way that each constructor performs a different task.
They are differentiated by the compiler by the number of parameters in the list and their types.

Difference between constructor and method in Java

Java Constructor	                                             Java Method
A constructor is used to initialize the state of an object.	     A method is used to expose the behavior of an object.
A constructor must not have a return type.	                     A method must have a return type.
The constructor is invoked implicitly.	                         The method is invoked explicitly.
The Java compiler provides a default constructor
if you don't have any constructor in a class.	                 The method is not provided by the compiler in any case.
The constructor name must be same as the class name.	         The method name may or may not be same as the class name.